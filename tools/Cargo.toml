[package]
edition = "2024"
name    = "tools"
version = "0.3.0"

# ────────────────────────────────────────────────────────────────
# Dependencies
# ────────────────────────────────────────────────────────────────
[dependencies]
futures   = "0.3.31"
inventory = "0.3.20"

# `schemars` is only pulled in when the `schema` feature is enabled;
# we also enable its `derive` sub-feature so you can write
# `#[derive(JsonSchema)]` on your structs.
schemars = { version = "0.8.22", features = ["derive"], optional = true }

serde      = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"
thiserror  = "2.0.12"

tokio      = { version = "1.44.2", features = ["macros", "rt-multi-thread", "time"] }
tokio-test = "0.4.4"

tools_macros = { path = "../tools_macros" }
uuid = { version = "1.18.1", features = ["v4"] }

# ────────────────────────────────────────────────────────────────
# Cargo feature flags
# ────────────────────────────────────────────────────────────────
[features]
# Build without JSON-Schema support by default to keep the binary minimal.
default = []

# Enable full JSON-Schema generation (OpenAI / Gemini function-calling).
schema = ["schemars"]
